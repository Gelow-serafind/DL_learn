==== 测试一下 ====
<code>switch (ctrl->state)
	{
			/''''< 0行走轮处于初始上电状态 */
		case WHEEL''MANAGE''STATE_INIT:
			/''! 初始延时2S并且使能数据上传保证主控数据记录后进入正常流程 ''/
			if ((elapse''time >= 2000) && (TRUE == ctrl->b''upload_enable))
			{
				if (ctrl->action''level > EXCEPTION''ACTION_NORMAL)
				{
					action''level''max = EXCEPTION''ACTION''NORMAL;
					ctrl->state = WHEEL''MANAGE''STATE_ABNORMAL;
				}
				else
				{
					if (FALSE == ctrl->b''align''init)
					{
						ctrl->state = WHEEL''MANAGE''STATE''WAIT''STOP''BEFORE''ALIGN;
					}
					else
					{
						ctrl->state = WHEEL''MANAGE''STATE''WAIT''STOP''BEFORE''NORMAL;
					}
				}

				ctrl->state''change''start''time = time''get''mono''ms();
			}

			break;
			/''''< 1异常恢复后，如果行走轮电机不需要重新位置初始化，等待行走模块静止，才能切到NORMAL状态,此时可以接收行走轮STOP命令 */
		case WHEEL''MANAGE''STATE''WAIT''STOP''BEFORE''NORMAL:
			/''! 如果超过2S行走轮还未停止，也强制设置行走轮速度0，避免出现在坡上时急停触发瞬间恢复时一直溜坡不能锁住的情况 ''/
			if ((elapse''time >= 2000) || (TRUE == ctrl->b''wheel_stop))
			{
				wheel''set''all''motor''vel_0();
				ctrl->state = WHEEL''MANAGE''STATE''DELAY''TO_NORMAL;
				ctrl->state''change''start''time = time''get''mono''ms();
			}

			break;
			/''''< 2异常恢复后，如果行走轮电机需要重新位置初始化，等待行走模块静止后才能接收行走轮STOP命令 */
		case WHEEL''MANAGE''STATE''WAIT''STOP''BEFORE''ALIGN:
			if (TRUE == ctrl->b''wheel''stop)
			{
				wheel''set''all''motor''vel_0();
				ctrl->state = WHEEL''MANAGE''STATE''WAIT''ALIGN;
				ctrl->state''change''start''time = time''get''mono''ms();
			}

			break;
			/''''< 3等待所有驱动轮都已接收到控制命令，开始位置初始化动作 */
		case WHEEL''MANAGE''STATE''WAIT''ALIGN:
			if (TRUE == ctrl->b''align''init)
			{
				ctrl->state = WHEEL''MANAGE''STATE''DELAY''TO_NORMAL;
				ctrl->state''change''start''time = time''get''mono''ms();
			}
		
			break;
			/''''< 4异常恢复后，延时进入正常模式 */
		case WHEEL''MANAGE''STATE''DELAY''TO_NORMAL:
			if ((elapse''time >= 2000) && (TRUE == ctrl->b''wheel_stop))
			{
				if (FALSE == ctrl->b''need''cali_exist)
				{
					ctrl->state = WHEEL''MANAGE''STATE_NORMAL;
				}
				else
				{
					ctrl->state = WHEEL''MANAGE''STATE''WAIT''CALI_START;
				}

				ctrl->state''change''start''time = time''get''mono''ms();
			}
		
			break;

        case WHEEL''MANAGE''STATE''WAIT''CALI_START:
			if (TRUE == ctrl->b''all''cali_ok)
			{
				ctrl->cali''try''cnt = 0;
				ctrl->state = WHEEL''MANAGE''STATE_NORMAL;
				ctrl->state''change''start''time = time''get''mono''ms();
			}
			else
			{
				/''! 轮组连续位置校正次数超过5次，就不再自动重新初始化校正，除非安全保护状态由触发变为不触发 ''/
				if (ctrl->cali''try''cnt < 5)
				{
					wheel''manage''cali_start();
					ctrl->state = WHEEL''MANAGE''STATE_CALI;
					ctrl->state''change''start''time = time''get''mono''ms();
					ctrl->cali''try''cnt++;
				}
			}
			
			break;
			/''''< 10行走模块处于轮组旋转角度校正过程中 */
		case WHEEL''MANAGE''STATE_CALI:
			if (TRUE == ctrl->b''all''cali_ok)
			{
				ctrl->cali''try''cnt = 0;
				ctrl->state = WHEEL''MANAGE''STATE_NORMAL;
				for (i = 0; i < ctrl->group_cnt; i++)
				{
					group = &ctrl->group_ctrl[i];

					if (FALSE == group->b_exist)
					{
						continue;
					}					
					wheel''group''set''cur''limit(group, FALSE);
				}

				ctrl->state''change''start''time = time''get''mono''ms();
			}
			else
			{
				wheel''manage''cali''check''process();
			}

			break;
			/''''< 5行走模块完全正常，可以接收相关命令 */
		case WHEEL''MANAGE''STATE_NORMAL:
			if (ctrl->action''level > EXCEPTION''ACTION_NORMAL)
			{
				if (EXCEPTION''ACTION''LEVEL1 == ctrl->action_level)
				{
					ctrl->state = WHEEL''MANAGE''STATE''ABNORMAL''WAIT''HOST''CTRL_STOP;
				}
				else if (EXCEPTION''ACTION''LEVEL2 == ctrl->action_level)
				{
					ctrl->state = WHEEL''MANAGE''STATE''ABNORMAL''WAIT''RCU''CTRL_STOP;
					wheel''set''all''motor''stop();
				}
				else
				{
					ctrl->state = WHEEL''MANAGE''STATE_ABNORMAL;
				}

				ctrl->state''change''start''time = time''get''mono''ms();
			}
			else
			{
				/''! 如果正常模式下发现轮组位置校正失败，则需要切换状态到异常状态后，重新进行校正动作 ''/
				if ((TRUE == ctrl->b''need''cali_exist)
					&& (FALSE == ctrl->b''all''cali_ok))
				{
					ctrl->state = WHEEL''MANAGE''STATE''ABNORMAL''WAIT''RCU''CTRL_STOP;
					wheel''set''all''motor''stop();
					ctrl->state''change''start''time = time''get''mono''ms();
				}
			}
		
			break;

        case WHEEL''MANAGE''STATE''ABNORMAL''WAIT''HOST''CTRL_STOP:
			if ((ctrl->action''level > EXCEPTION''ACTION_LEVEL2)
				|| (TRUE == ctrl->b''wheel''stop))
			{
				ctrl->state = WHEEL''MANAGE''STATE_ABNORMAL;
				ctrl->state''change''start''time = time''get''mono''ms();
			}
			else if ((EXCEPTION''ACTION''LEVEL2 == ctrl->action_level)
					|| (elapse''time >= ctrl->host''ctrl''stop''timeout))
			{
				ctrl->state = WHEEL''MANAGE''STATE''ABNORMAL''WAIT''RCU''CTRL_STOP;
				wheel''set''all''motor''stop();
				ctrl->state''change''start''time = time''get''mono''ms();
			}

			break;
			/''''< 7急停或碰撞触发，等待RCU控制所有行走轮停止 */		
		case WHEEL''MANAGE''STATE''ABNORMAL''WAIT''RCU''CTRL_STOP:
			if ((ctrl->action''level > EXCEPTION''ACTION_LEVEL2)
				|| (TRUE == ctrl->b''wheel''stop)
				|| (elapse''time >= ctrl->host''ctrl''stop''timeout))
			{
				/''! 超时检测到行走轮还未停止，则直接FREERUN所有电机 ''/	
				if (elapse''time >= ctrl->host''ctrl''stop''timeout)
				{
					wheel''set''all''motor''freerun();
				}

				ctrl->state = WHEEL''MANAGE''STATE_ABNORMAL;
				ctrl->state''change''start''time = time''get''mono''ms();
			}
		
			break;

        case WHEEL''MANAGE''STATE_ABNORMAL:
			if (ctrl->action''level > EXCEPTION''ACTION_NORMAL)
			{
				if (action''level''max < ctrl->action_level)
				{
					action''level''max = ctrl->action_level;

					if ((EXCEPTION''ACTION''LEVEL1 == ctrl->action_level)
						|| (EXCEPTION''ACTION''LEVEL2 == ctrl->action_level))
					{
						/''! 如果安全功能触发，行走轮立即进入FREERUN模式 ''/
						if (TRUE == b''safe''trigger)
						{
							if (FALSE == b''stop''freerun)
							{
								wheel''set''all''motor''stop();
							}
							else
							{
								wheel''set''all''motor''freerun();
							}
						}
						else
						{
							wheel''set''all''motor''stop();
						}
					}
					else if (EXCEPTION''ACTION''LEVEL3 == ctrl->action_level)
					{
						wheel''set''all''motor''freerun();
					}
				}
				else if (TRUE == b''stop''freerun_edge)
				{
					wheel''set''all''motor''freerun();
				}

				if ((TRUE == ctrl->b''wheel''manual''brake) && (FALSE == b''safeguard_trigger))
				{
					/''''< 须在安全未触发情况下进入 */
					ctrl->state = WHEEL''MANAGE''STATE''ABNORMAL''MANUAL_BARKE;
					ctrl->state''change''start''time = time''get''mono''ms();
				}
			}
			else
			{
				if (FALSE == ctrl->b''align''init)
				{
					ctrl->state = WHEEL''MANAGE''STATE''WAIT''STOP''BEFORE''ALIGN;
				}
				else
				{
					ctrl->state = WHEEL''MANAGE''STATE''WAIT''STOP''BEFORE''NORMAL;
				}

				ctrl->state''change''start''time = time''get''mono''ms();
				action''level''max = EXCEPTION''ACTION''NORMAL;
			}

			break;


        case WHEEL''MANAGE''STATE''ABNORMAL''MANUAL_BARKE:
			if ((TRUE == b''safeguard''trigger) || (FALSE == ctrl->b''wheel''manual_brake))
			{
				wheel''set''all''motor''brake(0);
				ctrl->b''wheel''brake_open = FALSE;
				ctrl->b''wheel''manual_brake = FALSE;
				ctrl->state = WHEEL''MANAGE''STATE_ABNORMAL;
			}
			else if (FALSE == ctrl->b''wheel''brake_open)               /''''< 处于正常状态下的手动模式并且抱闸未打开 */
			{
				wheel''set''all''motor''freerun();
				/''! 进入手动解抱闸状态后，如果行走轮静止或超过2S未静止，直接进行解抱闸动作 ''/
				if ((elapse''time >= 2000) || (TRUE == ctrl->b''wheel_stop))
				{
					wheel''set''all''motor''brake(1);
					ctrl->b''wheel''brake_open = TRUE;
				}
			}
			
			break;

		default:
			break;
	}
</code>

=== 代码详解 ===
* 这是一个switch
    - case 0
    - case 1

注意： '''这是一个注意'''
这是 '''一个下划线'''